#+title: LMN on FR
#+setupfile: ~/sync/talks/setup.org
#+LATEX_HEADER: \usepackage{siunitx}

#+setupfile: "./lmn-fr-pdsp-0.org"

* Meta :noexport:

Requires:
- ~wire-cell-python~ installed and in environment.
- ~wire-cell-data~ repo in ~WIRECELL_PATH~.

To produce the files required to build this presentation run:

#+begin_example
$ WCT_BATS_TMPDIR=$(pwd)/. bats   ../../../test/test-lmn-fr-pdsp.bats
#+end_example

For more verbosity add:

#+begin_example
$ WCT_BATS_LOG_SINK=terminal WCT_BATS_LOG_LEVEL=debug ....
#+end_example

Then, visit this org file and type ~C-c C-e l P~ to export to latex/beamer/PDF.

* Content overview

For the paper, we want to test LMN resampling on realistic waveforms.

- Need "full simulation" but want to avoid new field calculations.

- Apply LMN resampling to existing field responses (FRs):

|   <r> |            <r> |          <r> |      <r> |
|       | Field response |   simulation |      ADC |
|       |       sampling | downsampling | sampling |
|-------+----------------+--------------+----------|
| have: |  \qty{100}{ns} |     \times 5 |   500 ns |
| want: |   \qty{64}{ns} |     \times 8 |   512 ns |


- Understand FR related units and normalization.

  - Sampling "interpretations" added to paper draft.

  - Uncover some PDSP-specific FR issues not directly related.

- Apply resampled FR in WCT simulation + ADC resampling + signal processing.

* Procedure overview - bundled into a BATS test.


**                                                                :B_columns:
:PROPERTIES:
:BEAMER_env: columns
:END:

***                                                                   :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.4
:END:

\includegraphics[height=0.9\textheight]{job-overview.pdf}

***                                                                   :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.6
:END:

~gen/test/test-lmn-fr-pdsp.bats~

- Resample \qty{100}{ns} FR to \qty{64}{ns} FR.
- Generate "diagonal line track" depos.
- Simulate \qty{500}{ns} ADCs and \qty{512}{ns} ADCs.
- Resample \qty{512}{ns} ADCs to \qty{500}{ns} ADCs.
  - \small Currently done by ~wire-cell-python~, a WCT C++ component is WIP.  Target: 1s/APA.
- Run SP at \qty{500}{ns} on both sets of \qty{500}{ns} ADCs.
- Various plotters.




* Sampling interpretation and resampling normalization $N_s \to N_r$

** Instantaneous

Samples are continuous function values, resampling is *interpolation*, signal strength preserved.

- Norm: $A_0 = \frac{N_r}{N_s}$ (normalizing on forward $DFT$ is correct)

** Integrating

Samples integrate continuous function over sample period, signal sum preserved.

- Norm: $A_1 = \frac{N_s}{N_r}A_0 = 1$ (normalizing on inverse $DFT^{-1}$ is correct)

** Energy

Samples provide "probability amplitude" or "field" values, signal Parseval energy (sum of squares) is preserved.

- Norm: $A_2 = \sqrt{\frac{N_r}{N_s}}$ (symmetric $DFT$ normalization is correct)

** Initial discussion details are in the paper draft.


* Resampling electric current field response ($I$)

**                                                                :B_columns:
:PROPERTIES:
:BEAMER_env: columns
:END:

***                                                                   :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.6
:END:

{{{fig-fr-pdsp-0}}}

***                                                                   :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.4
:END:


We interpret FR as an *instantaneous electric current*.

- \small Resampling is an *interpolation*.
- \small Normalize the DFT round trip by the *initial size*.


** Note, all frequency spectra here are $|DFT(x)|$ with no normalization applied.

* Zoom in - time-domain ringing

**                                                                :B_columns:
:PROPERTIES:
:BEAMER_env: columns
:END:

***                                                                   :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.6
:END:

{{{fig-fr-zoom-pdsp-0}}}

***                                                                   :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.4
:END:

See *high-frequency ringing* in the time-domain after fast transitions.
- \small Due to non-zero power at the original Nyquist frequency (\qty{5}{MHz}).
- Indicates that $I$ is *undersampled* at the original \qty{100}{ns}.
- The eventual convolution with the slower *electronics response* attenuates the ringing.
- Note, frequency-domain wiggles are actual features, not ringing.

** *We must be cognizant of ringing when applying LMN to ADC waveforms.*

* Cold electronics response ($E$)

**                                                                :B_columns:
:PROPERTIES:
:BEAMER_env: columns
:END:

***                                                                   :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.6
:END:

{{{fig-cer-pdsp-0}}}

#+begin_center
\small $gain=\qty{14}{mV/fC},\ shaping=\qty{2}{us}$
#+end_center

***                                                                   :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.4
:END:

$E$ is an *instantaneous* signal.
- \small Resampling is an *interpolation*.

- \small Gain sets peak value and must be retained by the resampling.

* Detector response ($I \otimes E$)

**                                                                :B_columns:
:PROPERTIES:
:BEAMER_env: columns
:END:

***                                                                   :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.6
:END:

{{{fig-fr-er-pdsp-0}}}

***                                                                   :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.4
:END:


We /say/ *detector response* is $I \otimes E$.

- \small Naively, we get "weird units" which are not $[voltage]$.
- \small The sim multiplies by the sample period to give the missing $[time]$.

What normalization is correct?
- \small Do we resample before we convolve or vice versa?

* Charge field response resampling

**                                                                :B_columns:
:PROPERTIES:
:BEAMER_env: columns
:END:

***                                                                   :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.6
:END:

{{{fig-q-pdsp-0}}}

***                                                                   :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.4
:END:



Better to define "detector response" as: \[I \to Q = I \cdot  T\]
Resampling $Q$ requires an *integral interpretation*.
- \small Time-domain samples are scaled to preserve total integral.
- Trivially,
  
\small  $[charge]\cdot[voltage/charge]=[voltage]$.

* Detector voltage response ($Q \otimes E$)


**                                                                :B_columns:
:PROPERTIES:
:BEAMER_env: columns
:END:

***                                                                   :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.6
:END:

{{{fig-v-pdsp-0}}}

***                                                                   :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.4
:END:

Normalization is now clear.
- \small $Q$ is integral-resampled.
- \small $E$ is interpolated-resampled.
- \small $V$ is (effectively) interpolated-resampled.
WCT ~Digitizer~ component will then produce interpolated ADC.


* PDSP FR issue: sample period not exactly \qty{100}{ns}

The file ~dune-garfield-1d565.json.bz2~ seems to be current ProtoDUNE-SP
- \small Is it still best?

It has $T=\qty{99.998998998999}{ns}$ which fails LMN "rationality condition".
- \small This is not FP round-off or JSON munging (100.0 is exact in JSON).
- \small For here/now, *force* $T = \qty{100}{ns}$.

Already mentioned that our FRs are in general *undersampled*.
- \small Leads to ringing in resampled.
- Does not matter in end due to convolution with slow ER.

* PDSP FR issue: time domain is too short


**                                                                :B_columns:
:PROPERTIES:
:BEAMER_env: columns
:END:

***                                                                   :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.6
:END:

{{{fig-fr-front-pdsp-0}}}

***                                                                   :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.4
:END:

 
Early response is ignored.

- \small FR starts low, plus weird down step.
- Non-zero DC component.
- (ringing in the resampled).

Note, FR sign opposite from ADC.
- \small Induction has positive net signal.
- $\sum Q / \sum |Q| \approx \qty{0.3}{\%}$

\scriptsize This problem was recently "discovered" by UVCGAN.

* ADC with different samplings.

Will show ADC *waveform* and *spectrum* from:

- Native ADC at \qty{500}{ns}
- Native ADC at \qty{512}{ns}  
- Resample native ADC at \qty{512}{ns} $\to$ \qty{500}{ns}  

Using "diagonal track" and a select channel/time relative to U, V, W plane:

- activity near to planes
- activity far from planes

Noise is effectively unique for both native ADC sets.


* ADC near U-plane

\includegraphics[height=0.9\textheight,page=1]{channels-adc-near.pdf}

* ADC near V-plane

\includegraphics[height=0.9\textheight,page=2]{channels-adc-near.pdf}

* ADC near W-plane

\includegraphics[height=0.9\textheight,page=3]{channels-adc-near.pdf}

* ADC far U-plane

\includegraphics[height=0.9\textheight,page=1]{channels-adc-far.pdf}
* ADC far V-plane

\includegraphics[height=0.9\textheight,page=2]{channels-adc-far.pdf}

* ADC far W-plane

\includegraphics[height=0.9\textheight,page=3]{channels-adc-far.pdf}



* SP on the two \qty{500}{ns} ADCs.

Essentially same plots as ADC case

- Native signal at \qty{500}{ns}
- Signal from  \qty{512}{ns} $\to$ \qty{500}{ns}  resampled ADCs.

Using "diagonal track" and a select channel/time relative to U, V, W plane:

- activity near to planes
- activity far from planes



* Signal near U-plane

\includegraphics[height=0.9\textheight,page=1]{channels-sig-near.pdf}

* Signal near V-plane

\includegraphics[height=0.9\textheight,page=2]{channels-sig-near.pdf}

* Signal near W-plane

\includegraphics[height=0.9\textheight,page=3]{channels-sig-near.pdf}

* Signal far U-plane

\includegraphics[height=0.9\textheight,page=1]{channels-sig-far.pdf}
* Signal far V-plane

\includegraphics[height=0.9\textheight,page=2]{channels-sig-far.pdf}

* Signal far W-plane

\includegraphics[height=0.9\textheight,page=3]{channels-sig-far.pdf}




* Recent WCT resampling issues.

Initially we thought to put resampling in NF.
- Leverage existing FFTs to get "for free".
- Will requires substantial code refactoring.
- Might be good to do this anyways/eventually.

Numpy FFT roundtrip: $2560 \times 6000 \to 2560 \times 6114$ takes $\approx\qty{1}{s}$.
- Can we can achieve this "for cheap" speed in WCT C++?
- If so, much easier to implement in WCT.

* WCT C++ resampling status

1. ~OmnibusNoiseFilter~ and all its filters would will run at \qty{512}{ns}.
2. ~WireCellAux/Resampler.h~ a "frame filter" to apply resampling.
  - ~WireCellUtil/LMN.h~ spectrum resampling, "rational resize", etc.
3. All the remaining downstream processing "sees" \qty{500}{ns}.
  - Freedom of choice to run WCT sim with FR/ADC at \qty{100}{ns}/\qty{500}{ns} or \qty{64}{ns}/\qty{512}{ns}.
 
WCT C++ resampling is implemented but still needs performance/correctness testing.

* 

#+begin_center
\Huge $\mathcal{FIN}$
#+end_center


* ICARUS FR issue

I see ~garfield-icarus-fnal-rev2.json.bz2~ mentioned in ~cfg/~ but only
~garfield-icarus-fnal-rev1.json.bz2~ exists in ~wire-cell-data~.


# Local Variables:
# eval: (fix-latex-previews)
# End:
